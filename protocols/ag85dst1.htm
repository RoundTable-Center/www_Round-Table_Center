<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta name="robots" content="index,follow"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="icon" href="/logos/sitelogo1.svg" type="image/svg+xml">
    <meta name="keywords" content="data structure tree ag85dst1, by Arthur Golubev 1985 data structure tree ag85dst1"/>
    <title>Data structure tree AG85DST1</title>
    <meta name="description" content="By Arthur Golubev 19850316 (ArthurGolubev19850316) data structure tree ag85dst1."/>
    <meta name="changed" content="2025-08-07T22:00:00+03:00"/>
  </head>
  <body lang="en-US" link="#000080" vlink="#800000" dir="ltr">
    <p>Original Internet address of this content: <a href="https://www.ag85.site/protocols/ag85dst1.htm">https://www.ag85.site/protocols/ag85dst1.htm</a></p>
	  <h1>Data structure tree ag85dst1</h1>
	  <p>
	  Data structure AG85DST1 can be with Modification 1 and has Variantility 1.
	  </p
	  <p>
	  Without modifications the data structure is as follows: every link contains either some pointers each of which can be either address of one of child links or naught marker, in this case digits maps pointers in sequence order, or some pairs of a digit specificator and a pointer which can be either address of one of child links or naught marker, in this case digits maps pointers according to the specificators, except root link every link is associated with a digit and in parent link of the link corresponded to the digit pointer points to this link, values are digit-by-digit accumulated as sequence of digits corresponded to the links which paths to a leaf goes through (a remark that may be helpful for understanding: the tree differs from the so-called prefix trees by that not a link contains value of a digit but what digit is corresponds to a pointer of a link defines digits associated with each of the child links).
    </p>
	  <p>
	  Modification 1. Size of values is fixed and provided and there are not only-naught-values leaves but instead of pointers that specify last in a value digit are used markers of presence of corresponded digit. 
	  </p>
	  <p>
	  Variantility 1. A sequence of links with a single pointers can be replaced with a digits group link which comparatively to initial variant of links in addition contains a sequence of starting from the second digit associated with link digits.     
	  </p>
	  <p>
	  By Arthur Golubev 1985 correct description of ag85dst1 data structure first time was published 2025-08-07 at Internet-site ag85.site, its copy Internet-site arthurgolubev.22web.org, Internet-site roundtable.center and Internet-repositories https://github.com/AGInfraSystem/AGInfraSystemEngineerTools and https://codeberg.org/AGInfraSystem/AGInfraSystemEngineerTools
	  </p>
    <p>
    By Arthur Golubev 1985 ag85dst1 data structure first time was used in first time published in 2025-02-26 code which demonstrates idea of ag85aor1 ordering which uses this data structure in Internet-repositories github.com (<a href="https://github.com/ArthurGolubev1985/AG85AOR1AlgorithmOfOrderingIdeaDemo">https://github.com/ArthurGolubev1985/AG85AOR1AlgorithmOfOrderingIdeaDemo</a>), codeberg.org (<a href="https://codeberg.org/ArthurGolubev1985/AG85AOR1AlgorithmOfOrderingIdeaDemo">https://codeberg.org/ArthurGolubev1985/AG85AOR1AlgorithmOfOrderingIdeaDemo</a>) and gitflic.ru (<a href="https://gitflic.ru/project/arturische/ag85aor1algorithmoforderingideademo">https://gitflic.ru/project/arturische/ag85aor1algorithmoforderingideademo</a>).
    </p>
  </body>
</html>
