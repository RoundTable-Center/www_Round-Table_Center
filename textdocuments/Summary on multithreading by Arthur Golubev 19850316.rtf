{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\fnil\fprq2\fcharset0 Noto Sans CJK SC;}{\f6\fswiss\fprq0\fcharset0 Noto Sans Devanagari;}{\f7\fnil\fprq2\fcharset0 Noto Sans Devanagari;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red114\green159\blue207;}
{\stylesheet{\s0\snext0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052 Normal;}
{\s1\sbasedon17\snext18\rtlch\af7\afs36\ab \ltrch\hich\af4\loch\ilvl0\outlinelevel0\sb240\sa120\keepn\f4\fs36\b\dbch\af5 Heading 1;}
{\s2\sbasedon17\snext18\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5 Heading 2;}
{\s3\sbasedon17\snext18\rtlch\af7\afs28\ab \ltrch\hich\af4\loch\ilvl2\outlinelevel2\sb140\sa120\keepn\f4\fs28\b\dbch\af5 Heading 3;}
{\s4\sbasedon17\snext18\rtlch\af7\afs26\ai\ab \ltrch\hich\af4\loch\ilvl3\outlinelevel3\sb120\sa120\keepn\f4\fs26\i\b\dbch\af5 Heading 4;}
{\s5\sbasedon17\snext18\rtlch\af7\afs24\ab \ltrch\hich\af4\loch\ilvl4\outlinelevel4\sb120\sa60\keepn\f4\fs24\b\dbch\af5 Heading 5;}
{\*\cs15\snext15\loch\cf9\ul\ulc0 Hyperlink;}
{\*\cs16\snext16 Index Link;}
{\s17\sbasedon0\snext18\rtlch\af7\afs28 \ltrch\hich\af4\loch\sb240\sa120\keepn\f4\fs28\dbch\af5 Heading;}
{\s18\sbasedon0\snext18\loch\sl276\slmult1\sb0\sa140 Body Text;}
{\s19\sbasedon18\snext19\rtlch\af6 \ltrch\loch\sl276\slmult1\sb0\sa140 List;}
{\s20\sbasedon0\snext20\rtlch\af6\afs24\ai \ltrch\loch\sb120\sa120\noline\fs24\i Caption;}
{\s21\sbasedon0\snext21\rtlch\af6 \ltrch\loch\noline Index;}
{\s22\sbasedon0\snext22\loch\tqc\tx4819\tqr\tx9638\noline Header and Footer;}
{\s23\sbasedon22\snext23\loch\tqc\tx4819\tqr\tx9638\noline Header;}
{\s24\sbasedon17\snext18\rtlch\af7\afs56\ab \ltrch\hich\af4\loch\qc\sb240\sa120\keepn\f4\fs56\b\dbch\af5 Title;}
{\s25\sbasedon17\snext18\rtlch\af7\afs36 \ltrch\hich\af4\loch\qc\sb60\sa120\keepn\f4\fs36\dbch\af5 Subtitle;}
{\s26\sbasedon17\snext26\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\fi0\li0\lin0\sb240\sa120\keepn\noline\f4\fs32\b\dbch\af5 Index Heading;}
{\s27\sbasedon26\snext27\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\fi0\li0\lin0\sb240\sa120\keepn\noline\f4\fs32\b\dbch\af5 TOC Heading;}
{\s28\sbasedon21\snext28\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li0\lin0\noline TOC 1;}
{\s29\sbasedon21\snext29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline TOC 2;}
{\s30\sbasedon21\snext30\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li567\lin567\noline TOC 3;}
{\s31\sbasedon21\snext31\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li850\lin850\noline TOC 4;}
{\s32\sbasedon21\snext32\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li1134\lin1134\noline TOC 5;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'00;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'01;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'02;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'03;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'04;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'05;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'06;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'07;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'08;}{\levelnumbers\'01;}\fi0\li0}\listid1}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}{\*\generator LibreOffice/24.2.7.2$Linux_X86_64 LibreOffice_project/420$Build-2}{\info{\creatim\yr2024\mo11\dy16\hr3\min28}{\revtim\yr2025\mo7\dy6\hr10\min19}{\printim\yr2025\mo7\dy6\hr12\min18}}{\*\userprops}\deftab709
\hyphauto1\viewscale100\formprot\formshade\nobrkwrptbl\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sftnnar\saftnnrlc\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1969\headery1134\margbsxn1134{\header\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar{\loch
Summary}{\loch
 on multithreading }{\loch
b}{\loch
y Arthur Golubev 19850316 }{\loch
2025-07-06\tab \tab \tab }{\loch
Page }{\loch
{\field{\*\fldinst  PAGE }{\fldrslt 3}}}{\loch
 of }{\loch
{\field{\*\fldinst  NUMPAGES }{\fldrslt 3}}}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar{\loch
------------------------------------------------------------------------------------------------------------------------}
\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s24\rtlch\af7\afs56\ab \ltrch\hich\af4\loch\qc\sb240\sa120\keepn\f4\fs56\b\dbch\af5\qc\sb240\sa120\ltrpar{\loch
Summary}{\loch
 on multithreading}
\par \pard\plain \s25\rtlch\af7\afs36 \ltrch\hich\af4\loch\qc\sb60\sa120\keepn\f4\fs36\dbch\af5\qc\sb60\sa120\ltrpar{\loch
b}{\loch
y Arthur Golubev 19850316}
\par \pard\plain \s25\rtlch\af7\afs36 \ltrch\hich\af4\loch\qc\sb60\sa120\keepn\f4\fs36\dbch\af5\qc\sb60\sa120\ltrpar{\loch
2025-07-06}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar\loch

\par \pard\plain \s27\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\fi0\li0\lin0\sb240\sa120\keepn\noline\f4\fs32\b\dbch\af5\ql\fi0\li0\lin0\noline\ltrpar{\rtlch\afs32\ab \ltrch\loch\fs32\b\loch
Table of Contents}
\par \pard\plain \s28\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li0\lin0\noline\ql\tldot\tqr\tx9637\ltrpar
{\field{\*\fldinst { TOC \\f \\o "1-9" \\h}}{\fldrslt {{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc77_89898606" }{\fldrslt {\loch
1: Threads\tab 1}}}}
\par \pard\plain \s28\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li0\lin0\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc93_89898606%20Copy%201" }{\fldrslt {\loch
2: Things to consider on multithreading\tab 2}}}}
\par \pard\plain \s29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc81_89898606" }{\fldrslt {\loch
2.1: Keeping correctness of data when multithreading\tab 2}}}}
\par \pard\plain \s30\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li567\lin567\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc83_89898606" }{\fldrslt {\loch
2.1.1: Problem of nonatomicity of some operations\tab 2}}}}
\par \pard\plain \s30\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li567\lin567\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc85_89898606" }{\fldrslt {\loch
2.1.2: Avoiding inappropriate accesses to shared data\tab 2}}}}
\par \pard\plain \s29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc899_3561902385" }{\fldrslt {\loch
2.2: Thread pools\tab 3}}}}}}}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar\loch

\par \pard\plain \s1\rtlch\af7\afs36\ab \ltrch\hich\af4\loch\ilvl0\outlinelevel0\sb240\sa120\keepn\f4\fs36\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc77_89898606}{\*\bkmkend __RefHeading___Toc77_89898606}1: }{\loch
Threads}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Every program is a set of commands which also can be called instructions; for example, to calculate something, to signal to a device, to read from a channel.}{\loch
 }{\loch
Some}{\loch
 actions can}{\loch
not }{\loch
happen simultaneously; }{\loch
for example, }{\loch
when we want to calculate something and then send it to an output device,}{\loch
 calculating }{\loch
must be completed}{\loch
 before }{\loch
sending}{\loch
 th}{\loch
is}{\loch
 result to an output device; }{\loch
and some actions }{\loch
can }{\loch
happen}{\loch
 simultaneously, for example providing result of previous calculations to an output device and }{\loch
performing }{\loch
next calculations. }{\loch
Also, what actions can be performed simultaneously depends on }{\loch
what}{\loch
 apparatuses can perform simultaneously.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Program commands can be organized into set of s}{\loch
equences }{\loch
of }{\loch
command}{\loch
s}{\loch
 that }{\loch
depend on each other only by shared data; }{\loch
such sequences}{\loch
 are called threads. }{\loch
S}{\loch
ome}{\loch
 }{\loch
resources }{\loch
and information }{\loch
can be }{\loch
associated with }{\loch
a}{\loch
 thread;}{\loch
 }{\loch
for example}{\loch
s}{\loch
, }{\loch
thread}{\loch
 memory }{\loch
or }{\loch
security access information, }{\loch
respectively}{\loch
.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Number of threads that an apparatus can perform simultaneously may be less than }{\loch
occasionally is current number of threads of a program, then some dispatching of thread over apparatus resources is required; replacing a thread to switch apparatus resources to another thread}{\loch
 }{\loch
can be done}{\loch
:}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- }{\loch
by }{\loch
a }{\loch
thread}{\loch
 }{\loch
it}{\loch
sel}{\loch
f}{\loch
 }{\loch
(}{\loch
a }{\loch
thread }{\loch
itself}{\loch
 call}{\loch
s}{\loch
 commands of switching to }{\loch
another}{\loch
 thread}{\loch
)}{\loch
;}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- }{\loch
forcedly to a thread: by }{\loch
either hardware or operating system.}
\par \pard\plain \s1\rtlch\af7\afs36\ab \ltrch\hich\af4\loch\ilvl0\outlinelevel0\sb240\sa120\keepn\f4\fs36\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc93_89898606 Copy 1}{\*\bkmkend __RefHeading___Toc93_89898606 Copy 1}2: }{\loch
Things to consider }{\loch
on multithreading}
\par \pard\plain \s2\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc81_89898606}{\*\bkmkend __RefHeading___Toc81_89898606}2.1: }{\loch
Keeping correctness of}{\loch
 data when }{\loch
multithreading}
\par \pard\plain \s3\rtlch\af7\afs28\ab \ltrch\hich\af4\loch\ilvl2\outlinelevel2\sb140\sa120\keepn\f4\fs28\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc83_89898606}{\*\bkmkend __RefHeading___Toc83_89898606}2.1.1: }{\loch
Problem of }{\loch
nonatomicity of }{\loch
some }{\loch
operations}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Atomicity of an operation }{\loch
in a system means }{\loch
that }{\loch
the operation}{\loch
 }{\loch
in the system }{\loch
cannot be broken into parts.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
If }{\loch
a }{\loch
threads read}{\loch
s}{\loch
 or modif}{\loch
ies}{\loch
 shared data by nonatomic operations simultaneously }{\loch
with another thread is modifying the shared data}{\loch
, these operations can be performed with corrupting values.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
An example of such corruption }{\loch
of value}{\loch
 }{\loch
because of absence of atomicity}{\loch
 }{\loch
follows. }{\loch
In th}{\loch
is}{\loch
 example of corruption }{\loch
of }{\loch
values }{\loch
because of absence of atomicity will be used term byte; word byte means a portion of information that has its own address in a system.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
I}{\loch
magine that a program }{\loch
needs to operate a variable number of diverse values of which is more than number of diverse values of a byte. Lets consider in the system the possible number of values in a byte is 256 }{\loch
an we need to operate a piece of data which fits in minimum two bytes}{\loch
. }{\loch
Common way to store such piece of data in two such bytes is storing units in the one of the byte with weight 256 (so that contribution of this byte is its value * 256) and units the another with weight 1 (so that contribution of this byte is 1). }{\loch
Lets consider}{\loch
 we decided that units of the first byte weights 256 and units of the second byte we}{\loch
i}{\loch
gh}{\loch
ts}{\loch
 1. }{\loch
Lets consider}{\loch
 and we wa}{\loch
n}{\loch
t }{\loch
the initial value is}{\loch
 515; }{\loch
then}{\loch
 in the first byte would be placed 2 and in the second byte would be placed 3 (the total contribution would be 256 * 2 + 1 * 3 = 515).  }{\loch
Lets consider}{\loch
 a situation that one of threads is reading the }{\loch
byte}{\loch
s and }{\loch
an}{\loch
other is changing }{\loch
the value to a 0 }{\loch
so that }{\loch
after }{\loch
the first threads has read the first }{\loch
byte, }{\loch
the second  thread change}{\loch
d}{\loch
 }{\loch
both }{\loch
byte}{\loch
s to 0. }{\loch
C}{\loch
ompleting the operations }{\loch
the first thread }{\loch
reads }{\loch
the second }{\loch
byte}{\loch
 so that for it the }{\loch
byte}{\loch
s values will be }{\loch
0 }{\loch
and }{\loch
3}{\loch
 which means value}{\loch
 256 * }{\loch
0 }{\loch
+ }{\loch
3 }{\loch
* 1 }{\loch
= }{\loch
3}{\loch
 }{\loch
which }{\loch
is neither initial, 515, nor set by the second of the threads 0 value.}
\par \pard\plain \s3\rtlch\af7\afs28\ab \ltrch\hich\af4\loch\ilvl2\outlinelevel2\sb140\sa120\keepn\f4\fs28\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc85_89898606}{\*\bkmkend __RefHeading___Toc85_89898606}2.1.2: }{\loch
Avoiding }{\loch
in}{\loch
appropriate}{\loch
 access}{\loch
es }{\loch
to shared data}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Some operation}{\loch
s}{\loch
 are naturally atomic according to }{\loch
design of }{\loch
the system; for examples:}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- }{\loch
as apparatus constructed changing apparatus flag is performed an operation per apparatus tick so that next operation just cannot start until the previous operation has completed because the next tick has not yet started;}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- }{\loch
as apparatus constructed }{\loch
commands of changing state in a device are transferred via a single bus to the device so that can pass only one by one}{\loch
.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
On level of apparatuses, l}{\loch
ets call }{\loch
memory atomic for the operations }{\loch
i}{\loch
f }{\loch
these}{\loch
 operations for }{\loch
this}{\loch
 memory are atomic. }{\loch
On level of programs, l}{\loch
ets call }{\loch
variables}{\loch
 atomic for the operations }{\loch
i}{\loch
f }{\loch
these}{\loch
 operations for }{\loch
this}{\loch
 }{\loch
variable}{\loch
 are atomic.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Variable that indicates some state is called flag.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
If it is appropriate to the system, }{\loch
program}{\loch
 can just store }{\loch
a }{\loch
value }{\loch
it }{\loch
operates }{\loch
by threads}{\loch
 in atomic }{\loch
memory.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Another option is }{\loch
us}{\loch
ing}{\loch
 }{\loch
an }{\loch
atomic }{\loch
flag per shared data}{\loch
 to indicate that }{\loch
one of operations }{\loch
which }{\loch
we want }{\loch
to not be performed simultaneously }{\loch
either }{\loch
is }{\loch
going to start }{\loch
or}{\loch
 has completed; }{\loch
then threads can}{\loch
 }{\loch
check }{\loch
the}{\loch
 atomic}{\loch
 flag }{\loch
and }{\loch
decid}{\loch
e}{\loch
 whether to start }{\loch
their}{\loch
 operation}{\loch
s}{\loch
 }{\loch
on the shared data }{\loch
or wait until a concurrent }{\loch
operation }{\loch
has completed. }{\loch
It is an option how many data protect with a flag; it designed has to be considered how expensive working with flags is, how expensive storing flags is and how }{\loch
expensive changing data structure is}{\loch
.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
In case }{\loch
of }{\loch
access to the atomic memory happens through cache memory either automatic or by commands managing of correct updating the atomic memory and caches is required}{\loch
.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
There is a trick when data is accessed through a pointer, to protect access by an atomic flag only for the pointer and rather than update data create a new instance and then redirect the pointer to the new instance.}
\par \pard\plain \s2\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc899_3561902385}{\*\bkmkend __RefHeading___Toc899_3561902385}2.2: }{\loch
Thread pools}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
W}{\loch
hen }{\loch
apparatus }{\loch
or operating system }{\loch
switch}{\loch
es}{\loch
 }{\loch
what thread it is running }{\loch
it cost}{\loch
s and w}{\loch
hen a program creates and deletes }{\loch
information associated with }{\loch
threads }{\loch
it costs}{\loch
. }{\loch
It may happen to be cheaper to create threads which dispatch and perform pieces of code of tasks rather than to dispatch threads }{\loch
for}{\loch
 task}{\loch
s}{\loch
 and create and delete information associated with the threads }{\loch
for}{\loch
 tasks.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\sb0\sa140\ltrpar\loch

\par }