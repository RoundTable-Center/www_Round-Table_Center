{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\fnil\fprq2\fcharset0 Noto Sans CJK SC;}{\f6\fswiss\fprq0\fcharset0 Noto Sans Devanagari;}{\f7\fnil\fprq2\fcharset0 Noto Sans Devanagari;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red114\green159\blue207;}
{\stylesheet{\s0\snext0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052 Normal;}
{\s1\sbasedon17\snext18\rtlch\af7\afs36\ab \ltrch\hich\af4\loch\ilvl0\outlinelevel0\sb240\sa120\keepn\f4\fs36\b\dbch\af5 Heading 1;}
{\s2\sbasedon17\snext18\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5 Heading 2;}
{\s3\sbasedon17\snext18\rtlch\af7\afs28\ab \ltrch\hich\af4\loch\ilvl2\outlinelevel2\sb140\sa120\keepn\f4\fs28\b\dbch\af5 Heading 3;}
{\s4\sbasedon17\snext18\rtlch\af7\afs26\ai\ab \ltrch\hich\af4\loch\ilvl3\outlinelevel3\sb120\sa120\keepn\f4\fs26\i\b\dbch\af5 Heading 4;}
{\s5\sbasedon17\snext18\rtlch\af7\afs24\ab \ltrch\hich\af4\loch\ilvl4\outlinelevel4\sb120\sa60\keepn\f4\fs24\b\dbch\af5 Heading 5;}
{\*\cs15\snext15\loch\cf9\ul\ulc0 Hyperlink;}
{\*\cs16\snext16 Index Link;}
{\s17\sbasedon0\snext18\rtlch\af7\afs28 \ltrch\hich\af4\loch\sb240\sa120\keepn\f4\fs28\dbch\af5 Heading;}
{\s18\sbasedon0\snext18\loch\sl276\slmult1\sb0\sa140 Body Text;}
{\s19\sbasedon18\snext19\rtlch\af6 \ltrch\loch\sl276\slmult1\sb0\sa140 List;}
{\s20\sbasedon0\snext20\rtlch\af6\afs24\ai \ltrch\loch\sb120\sa120\noline\fs24\i Caption;}
{\s21\sbasedon0\snext21\rtlch\af6 \ltrch\loch\noline Index;}
{\s22\sbasedon0\snext22\loch\tqc\tx4819\tqr\tx9638\noline Header and Footer;}
{\s23\sbasedon22\snext23\loch\tqc\tx4819\tqr\tx9638\noline Header;}
{\s24\sbasedon17\snext18\rtlch\af7\afs56\ab \ltrch\hich\af4\loch\qc\sb240\sa120\keepn\f4\fs56\b\dbch\af5 Title;}
{\s25\sbasedon17\snext18\rtlch\af7\afs36 \ltrch\hich\af4\loch\qc\sb60\sa120\keepn\f4\fs36\dbch\af5 Subtitle;}
{\s26\sbasedon17\snext26\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\fi0\li0\lin0\sb240\sa120\keepn\noline\f4\fs32\b\dbch\af5 Index Heading;}
{\s27\sbasedon26\snext27\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\fi0\li0\lin0\sb240\sa120\keepn\noline\f4\fs32\b\dbch\af5 TOC Heading;}
{\s28\sbasedon21\snext28\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li0\lin0\noline TOC 1;}
{\s29\sbasedon21\snext29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline TOC 2;}
{\s30\sbasedon21\snext30\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li567\lin567\noline TOC 3;}
{\s31\sbasedon21\snext31\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li850\lin850\noline TOC 4;}
{\s32\sbasedon21\snext32\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li1134\lin1134\noline TOC 5;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'00;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'01;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'02;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'03;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'04;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'05;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'06;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'07;}{\levelnumbers\'01;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'01\'08;}{\levelnumbers\'01;}\fi0\li0}\listid1}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}{\*\generator LibreOffice/24.2.6.2$Linux_X86_64 LibreOffice_project/420$Build-2}{\info{\creatim\yr2024\mo11\dy16\hr3\min28}{\revtim\yr2024\mo11\dy16\hr16\min27}{\printim\yr2024\mo11\dy16\hr16\min35}}{\*\userprops}\deftab709
\hyphauto1\viewscale100\formprot\formshade\nobrkwrptbl\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sftnnar\saftnnrlc\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1969\headery1134\margbsxn1134{\header\pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar{\loch
Reference on multithreading }{\loch
b}{\loch
y Arthur Golubev 19850316 }{\loch
from 2024-11-16}{\loch
\tab \tab }{\loch
Page }{\loch
{\field{\*\fldinst  PAGE }{\fldrslt 4}}}{\loch
 of }{\loch
{\field{\*\fldinst  NUMPAGES }{\fldrslt 4}}}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar{\loch
------------------------------------------------------------------------------------------------------------------------}
\par }\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s24\rtlch\af7\afs56\ab \ltrch\hich\af4\loch\qc\sb240\sa120\keepn\f4\fs56\b\dbch\af5\qc\sb240\sa120\ltrpar{\loch
Reference on multithreading}
\par \pard\plain \s25\rtlch\af7\afs36 \ltrch\hich\af4\loch\qc\sb60\sa120\keepn\f4\fs36\dbch\af5\qc\sb60\sa120\ltrpar{\loch
By Arthur Golubev 19850316}
\par \pard\plain \s25\rtlch\af7\afs36 \ltrch\hich\af4\loch\qc\sb60\sa120\keepn\f4\fs36\dbch\af5\ltrpar{\loch
from 2024-11-16}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar\loch

\par \pard\plain \s27\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\fi0\li0\lin0\sb240\sa120\keepn\noline\f4\fs32\b\dbch\af5\ql\fi0\li0\lin0\noline\ltrpar{\rtlch\afs32\ab \ltrch\loch\fs32\b\loch
Table of Contents}
\par \pard\plain \s28\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li0\lin0\noline\ql\tldot\tqr\tx9637\ltrpar
{\field{\*\fldinst { TOC \\f \\o "1-9" \\h}}{\fldrslt {{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc77_89898606" }{\fldrslt {\loch
1: Threads\tab 1}}}}
\par \pard\plain \s28\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li0\lin0\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc93_89898606%20Copy%201" }{\fldrslt {\loch
2: Things to consider on multithreading\tab 2}}}}
\par \pard\plain \s29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc81_89898606" }{\fldrslt {\loch
2.1: Keeping correctness of data when multithreading\tab 2}}}}
\par \pard\plain \s30\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li567\lin567\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc83_89898606" }{\fldrslt {\loch
2.1.1: Problem of nonatomicity of operations\tab 2}}}}
\par \pard\plain \s30\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li567\lin567\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc85_89898606" }{\fldrslt {\loch
2.1.2: Avoiding incompatible accesses\tab 3}}}}
\par \pard\plain \s31\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li850\lin850\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc823_89898606%20Copy%201" }{\fldrslt {\loch
2.1.2.1: Making an operation atomic\tab 3}}}}
\par \pard\plain \s32\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li1134\lin1134\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc823_89898606" }{\fldrslt {\loch
2.1.2.1.1: Flagging that blocking operation is in progress\tab 3}}}}
\par \pard\plain \s32\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li1134\lin1134\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc825_89898606" }{\fldrslt {\loch
2.1.2.1.2: Barriering sets of commands\tab 3}}}}
\par \pard\plain \s31\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li850\lin850\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc91_89898606" }{\fldrslt {\loch
2.1.2.2: Different levels of granularity of atomicity\tab 3}}}}
\par \pard\plain \s31\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li850\lin850\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc89_89898606" }{\fldrslt {\loch
2.1.2.3: Replacing pointer trick\tab 3}}}}
\par \pard\plain \s29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc899_3561902385" }{\fldrslt {\loch
2.2: Thread pools\tab 3}}}}
\par \pard\plain \s29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc95_89898606" }{\fldrslt {\loch
2.3: Cachefriendliness\tab 3}}}}
\par \pard\plain \s29\rtlch\af6 \ltrch\loch\tldot\tqr\tx9638\fi0\li283\lin283\noline\ql\tldot\tqr\tx9637\ltrpar{{\field{\*\fldinst HYPERLINK "#__RefHeading___Toc901_3561902385" }{\fldrslt {\loch
2.4: Storages for exchanging data among threads\tab 4}}}}}}}
\par \pard\plain \s0\rtlch\af7\afs24\alang1081 \ltrch\lang1033\langfe2052\hich\af3\loch\widctlpar\hyphpar0\aspalpha\ltrpar\cf0\f3\fs24\lang1033\kerning1\dbch\af8\langfe2052\ql\ltrpar\loch

\par \pard\plain \s1\rtlch\af7\afs36\ab \ltrch\hich\af4\loch\ilvl0\outlinelevel0\sb240\sa120\keepn\f4\fs36\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc77_89898606}{\*\bkmkend __RefHeading___Toc77_89898606}1: }{\loch
Threads}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Every program is a set of commands which also can be called instructions; for example, to calculate something, to signal to a device, to read from a channel.}{\loch
 Diverse apparatuses can have very diverse supported commands but it doesn\u8217\'92t change that in general not all of actions can happen simultaneously; }{\loch
for example calculating a result must occur before providing the result to an output device}{\loch
. }{\loch
So some parts of programs are sequences of commands which by their nature are to be performed in a certain order. }{\loch
If any part}{\loch
s}{\loch
 of a program contain commands that can be performed simultaneously, for example providing result of previous calculations to an output device and next  calculations, it can be considered as a specific parallel part of commands sequence so that program stay be a sequence of commands. }{\loch
Such }{\loch
sequences }{\loch
of programs are called threads. }{\loch
In general }{\loch
there are}{\loch
 }{\loch
some}{\loch
 associated with }{\loch
currently being performed thread resources,}{\loch
 }{\loch
for example fast memory using by currently being performed thread }{\loch
or }{\loch
security access information for the threads; w}{\loch
hich }{\loch
means that }{\loch
a thread can }{\loch
switch}{\loch
 flows of commands }{\loch
keeping assoc}{\loch
i}{\loch
ations with the resources which in turn is that you can consider a thread as a flow }{\loch
of }{\loch
commands associated with a set of designated for performing commands resources.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
So}{\loch
 }{\loch
word }{\loch
threads }{\loch
can be used for three}{\loch
 being executed sequences of programs, sequences of command sets of stored programs and }{\loch
entit}{\loch
ies}{\loch
 with which resources for }{\loch
performing commands }{\loch
are associated}{\loch
.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Threads are performed by apparatuses }{\loch
from }{\loch
which }{\loch
it follows that}{\loch
 performing of commands of threads simultaneously }{\loch
besides }{\loch
by}{\loch
 logic }{\loch
of the commands}{\loch
 }{\loch
is limited by }{\loch
what }{\loch
parts of threads can be done }{\loch
simultaneously }{\loch
by}{\loch
 apparatuses. }{\loch
Because in general}{\loch
 parts of multiple threads can\u8217\'92t be performed simultaneously }{\loch
in general }{\loch
there is some dispatching of }{\loch
currently }{\loch
being performed commands, }{\loch
in another word of threads}{\loch
. }{\loch
This dispatching depends on:}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- }{\loch
how commands (note commands of multiple threads can depend on each other }{\loch
too}{\loch
) depend on each other;}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- }{\loch
what}{\loch
 apparatuses can perform simultaneously.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Threads dispatching }{\loch
can be done by}{\loch
:}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- thread}{\loch
s }{\loch
themselves}{\loch
;}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
- either hardware or operating system.}
\par \pard\plain \s1\rtlch\af7\afs36\ab \ltrch\hich\af4\loch\ilvl0\outlinelevel0\sb240\sa120\keepn\f4\fs36\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc93_89898606 Copy 1}{\*\bkmkend __RefHeading___Toc93_89898606 Copy 1}2: }{\loch
Things to consider }{\loch
on multithreading}
\par \pard\plain \s2\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc81_89898606}{\*\bkmkend __RefHeading___Toc81_89898606}2.1: }{\loch
Keeping correctness of}{\loch
 data when }{\loch
multithreading}
\par \pard\plain \s3\rtlch\af7\afs28\ab \ltrch\hich\af4\loch\ilvl2\outlinelevel2\sb140\sa120\keepn\f4\fs28\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc83_89898606}{\*\bkmkend __RefHeading___Toc83_89898606}2.1.1: }{\loch
Problem of }{\loch
nonatomicity of operations}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
When multiple threads operate with the same data there is a problem that in general data operations are not atomic. }{\loch
Atomicity of an operation is that it cannot be broken into parts. In the following example of corruption because of absence of atomicity will be used term byte, word byte means three a portion of information that has its own address, }{\loch
a }{\loch
value of a portion of information that ha}{\loch
s its}{\loch
 own address }{\loch
and}{\loch
 size of portions of information that have their own addresses in a system. }{\loch
In the}{\loch
 example of corruption because of absence of atomicity }{\loch
word byte is used in both the first and the second meanings.}{\loch
 }{\loch
For example of}{\loch
 corruption because of absence of atomicity}{\loch
 imagine that a program of multiple threads is operating with a value }{\loch
of}{\loch
 two }{\loch
byte}{\loch
s }{\loch
so that base of the first }{\loch
byte}{\loch
 is 256 and base of the second }{\loch
byte}{\loch
 is 1 and resulting value is sum of (value of the first }{\loch
byte}{\loch
 * 256) and (value of the second }{\loch
byte}{\loch
 * 1) and the initial values of the }{\loch
byte}{\loch
s are  }{\loch
2 and 3 which for the program means 2 for base 256 and 3 for base 1 which }{\loch
means value }{\loch
(256*2)+(3*1)=515 }{\loch
and a situation that one of threads is reading the }{\loch
byte}{\loch
s and other is changing so that to a moment of time the first of the threads has read the first }{\loch
byte}{\loch
 and the second of the threads change}{\loch
d}{\loch
 }{\loch
both }{\loch
byte}{\loch
s to 0 }{\loch
that is}{\loch
 value 0 }{\loch
of the variable}{\loch
, }{\loch
completing of the operations is }{\loch
the first of the threads }{\loch
reads }{\loch
the second }{\loch
byte}{\loch
 so that for it the }{\loch
byte}{\loch
s values will be 256 and 0 which means value}{\loch
 (256*2)+(}{\loch
0*1)}{\loch
=512}{\loch
 }{\loch
which }{\loch
is neither initial, 515, nor set by the second of the threads 0 value. }{\loch
In case we are working from multiple threads with the same value the only way to avoid corrupting values because operations can be broken into parts is to avoid }{\loch
any other operations while performing changing value operation}{\loch
s}{\loch
.}
\par \pard\plain \s3\rtlch\af7\afs28\ab \ltrch\hich\af4\loch\ilvl2\outlinelevel2\sb140\sa120\keepn\f4\fs28\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc85_89898606}{\*\bkmkend __RefHeading___Toc85_89898606}2.1.2: }{\loch
Avoiding }{\loch
incompatible}{\loch
 access}{\loch
es}
\par \pard\plain \s4\rtlch\af7\afs26\ai\ab \ltrch\hich\af4\loch\ilvl3\outlinelevel3\sb120\sa120\keepn\f4\fs26\i\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc823_89898606 Copy 1}{\*\bkmkend __RefHeading___Toc823_89898606 Copy 1}2.1.2.1: }{\loch
Making an operation atomic}
\par \pard\plain \s5\rtlch\af7\afs24\ab \ltrch\hich\af4\loch\ilvl4\outlinelevel4\sb120\sa60\keepn\f4\fs24\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc823_89898606}{\*\bkmkend __RefHeading___Toc823_89898606}2.1.2.1.}{\loch
1}{\loch
: }{\loch
Flagging that b}{\loch
locking}{\loch
 operation is in progress}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
The one way of }{\loch
avoid}{\loch
ing}{\loch
 }{\loch
any other operations while performing changing value operation}{\loch
 is just to deny the other operations}{\loch
 while performing changing value operation}{\loch
. }{\loch
Setting state that a changing value operation is going to be performed means that you change some value and so that there is guarantee that in turn this value is read correctly there must be a guarantee }{\loch
by}{\loch
 the system that the setting state is atomic operation. }{\loch
An atomic}{\loch
ity of an}{\loch
 operation can be realized in two way}{\loch
s}{\loch
:}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{
 }{\loch
- }{\loch
a system explicitly blocks other operations with the value;}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{
 }{\loch
- }{\loch
naturally atomic operation is used (for example transferring through a single possible path).}
\par \pard\plain \s5\rtlch\af7\afs24\ab \ltrch\hich\af4\loch\ilvl4\outlinelevel4\sb120\sa60\keepn\f4\fs24\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc825_89898606}{\*\bkmkend __RefHeading___Toc825_89898606}2.1.2.}{\loch
1.}{\loch
2: }{\loch
Barriering sets of}{\loch
 commands}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Another }{\loch
way of }{\loch
avoid}{\loch
ing}{\loch
 }{\loch
any other operations while performing changing value operation}{\loch
 is }{\loch
to }{\loch
create barriers for commands so that other operation commands start only after the changing value operation has completed; }{\loch
this way requires explicit support by a system}{\loch
.}
\par \pard\plain \s4\rtlch\af7\afs26\ai\ab \ltrch\hich\af4\loch\ilvl3\outlinelevel3\sb120\sa120\keepn\f4\fs26\i\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc91_89898606}{\*\bkmkend __RefHeading___Toc91_89898606}2.1.2.}{\loch
2}{\loch
: }{\loch
Different levels of granularity }{\loch
of at}{\loch
o}{\loch
micity}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
When preventing incompatible access you protect the value, the part of the storage of the value or the whole storage of the value; }{\loch
it may be cheaper for a system to protect }{\loch
larger }{\loch
tha}{\loch
n}{\loch
 the value itself part of the data.}
\par \pard\plain \s4\rtlch\af7\afs26\ai\ab \ltrch\hich\af4\loch\ilvl3\outlinelevel3\sb120\sa120\keepn\f4\fs26\i\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc89_89898606}{\*\bkmkend __RefHeading___Toc89_89898606}2.1.2.}{\loch
3}{\loch
: }{\loch
Replacing pointer }{\loch
trick}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
When you blocks other operations it may be not desired that other threads wait for ending of the blocking; there is a way which may be acceptable and cheaper or faster for a system of working with the data through a pointer and changing copy of the data and after changes have been complete to switch the pointer to the changes instance; so other threads would be able to read through a pointer an instance of data while another instance is being change}{\loch
d}{\loch
 yet }{\loch
whi}{\loch
ch}{\loch
 is }{\loch
would be able }{\loch
not wait until changing operation }{\loch
on the whole data }{\loch
is completed }{\loch
but only for changing the pointer}{\loch
.}
\par \pard\plain \s2\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc899_3561902385}{\*\bkmkend __RefHeading___Toc899_3561902385}2.2: }{\loch
Thread pools}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
W}{\loch
hen a program creates and deletes threads it has its cost }{\loch
and when system switch from running one thread to running another one it has its costs too. }{\loch
It may be cheaper or faster to switch your threads from one set of commands to another without recreating threads and it may be cheaper and faster to bind your threads to system resources to avoid system switches among threads.}
\par \pard\plain \s2\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc95_89898606}{\*\bkmkend __RefHeading___Toc95_89898606}2.3: }{\loch
Cachefriendliness}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
Word cache means two }{\loch
data copied from an initial storage so that information of the data can be accessed cheaper without reading from initial storage so that the data access is cheaper or faster and storage for such data. }{\loch
Sometimes caching is organized so that data is replaced by portions of certain size; }{\loch
for example, a cache is divided into portions of 8 bytes and you have one variable which was placed into the first 4 bytes of the cache portion and another variable which was placed into the second 4 bytes of the cache portion, when you update }{\loch
one of the variable the whole cache portion is being updated and if another threads is programmed to operates with another variable it needs to wait until the cache portion is updated for accessing that another variable. }
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
The trick you can perform by cost of additional cache memory usage }{\loch
is aligning a variable to take place of the whole portion which forces to place any other variables in other cache portions; }{\loch
so updating this variable won\u8217\'92t retain operating with other variables.}
\par \pard\plain \s2\rtlch\af7\afs32\ab \ltrch\hich\af4\loch\ilvl1\outlinelevel1\sb200\sa120\keepn\f4\fs32\b\dbch\af5{\listtext\pard\plain \tab}\ls1 \fi0\li0\lin0\ql\fi0\li0\lin0\ltrpar{\loch
{\*\bkmkstart __RefHeading___Toc901_3561902385}{\*\bkmkend __RefHeading___Toc901_3561902385}2.4: Storages for exchanging data among threads}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\ltrpar{\loch
When a thread is intended to provide data to another thread or get data from another thread it is reasonable to create a }{\loch
storage for exchanging data among the threads so that no need to wait each other\u8217\'92}{\loch
s participation}{\loch
 in the processes of reading and writing.}
\par \pard\plain \s18\loch\sl276\slmult1\sb0\sa140\ql\sb0\sa140\ltrpar\loch

\par }